name: Java CI/CD with Maven, Docker, and Kubernetes

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Java JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'  # Specify Java version 17
          distribution: 'zulu'  # Use Zulu OpenJDK distribution
          cache: 'maven'  # Enable caching for Maven dependencies

      # Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build with Maven
      - name: Build with Maven
        run: mvn clean install

      # Build Docker image
      - name: Build Docker image
        run: docker build -t mynewapp .

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout code again in deploy job
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          kubectl-version: 'latest'

      # Set up Kubeconfig (from secret or external source)
      - name: Set up Kubeconfig
        run: echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

      # Deploy to Kubernetes using kubectl
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
